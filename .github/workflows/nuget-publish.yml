name: NuGet Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version (e.g., 1.0.0)'
        required: true
  release:
    types: [published]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for GitVersion
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Set version from input or release tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "PACKAGE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        else
          echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        fi
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release /p:Version=${{ env.PACKAGE_VERSION }} --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-build
    
    - name: Pack Conduit.Contract
      run: dotnet pack src/Conduit.Contract/Conduit.Contract.csproj --configuration Release /p:Version=${{ env.PACKAGE_VERSION }} --no-build --output nupkgs
    
    - name: Pack Conduit
      run: dotnet pack src/Conduit/Conduit.csproj --configuration Release /p:Version=${{ env.PACKAGE_VERSION }} --no-build --output nupkgs
    
    - name: Upload packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: nupkgs/*.nupkg
    
    - name: Publish to NuGet
      run: |
        for package in nupkgs/*.nupkg; do
          dotnet nuget push "$package" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        done

permissions:
  contents: read